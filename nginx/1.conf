
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    #关闭lua缓存
    lua_code_cache off;
    #共享全局变量，在所有worker间共享
    lua_shared_dict shared_data 1m;
    #最大等待任务数
    lua_max_pending_timers 1024;
    #最大同时运行任务数
    lua_max_running_timers 256;

    #初始化耗时操作
    init_by_lua_file F:\workspace-lua\lua.git\base\init.lua;


    server {
        listen       81;
        server_name  localhost;

        charset utf-8;

        #access_log  logs/host.access.log  main;

        location /access {
            default_type text/html;
            #执行内部URL重写或者外部重定向 rewrite_by_lua_file
            #用于访问控制
            access_by_lua_file F:\workspace-lua\lua.git\base\access.lua;
        }

        location /lua {
           default_type text/html;
           content_by_lua_file F:\workspace-lua\lua.git\base\index.lua;
        }

        location / {
           default_type text/html;
           set $test "hello, world.";
           content_by_lua '
              ngx.say(ngx.var.test)
           ';
        }



        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }


        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
            deny  all;
        }
    }



    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
